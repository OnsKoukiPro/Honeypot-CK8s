apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: monitoring
data:
  fluent.conf: |
    <source>
      @type tail
      path /var/log/containers/*.log
      exclude_path ["/var/log/containers/*.gz"]
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      follow_inodes true
      refresh_interval 5
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
        keep_time_key true
        emit_invalid_record_to_error false
      </parse>
    </source>

    <filter kubernetes.**>
      @type kubernetes_metadata
      skip_labels false
      skip_container_metadata false
      skip_master_url true
    </filter>

    # Filter to sanitize and truncate logs
    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
        # Clean up excessive backslashes in log messages
        log ${record["log"].to_s.gsub(/[\\]{10,}/, "[STRIPPED BACKSLASHES]").slice(0, 1000)}
      </record>
    </filter>

    # Main filter for handling OpenSearch rejections and ensuring proper formatting
    <filter kubernetes.**>
      @type record_transformer
      enable_ruby true
      <record>
        timestamp ${record["@timestamp"].to_s}
        level ${record["level"].to_s}
        message ${record["log"].to_s}
      </record>
    </filter>

    <match kubernetes.**>
      @type opensearch
      scheme http
      host opensearch.monitoring.svc.cluster.local
      port 9200
      logstash_format true
      logstash_prefix fluentd
      time_key @timestamp
      utc_index true
      request_timeout 30s
      reload_connections false
      <buffer>
        flush_interval 5s
        retry_forever true
        retry_type exponential_backoff
        retry_wait 1s
        retry_max_interval 60s
      </buffer>
      <on_failure>
        # If ingest fails, record an error message in the `pipeline_error` field
        <record>
          pipeline_error "Failed to send log to OpenSearch"
        </record>
      </on_failure>
    </match>
